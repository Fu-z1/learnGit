inherit: [buildenv, werror, packing-module]

metaEnvironment:
   PKG_LICENSE: "proprietary-pcc"
   PKG_RESPONSIBLE: "System-System"

depends:
   - examples::commonAPI::tsd-myservice-api-dev

checkoutSCM:
 - scm: git
   url: git@${DEFAULT_PCC_GIT_SERVER}:mib3-architecture/tsd.myservice.app.git
   dir: tsd.myservice.app
   branch: master

multiPackage:
   "":
      depends:
         - use: [tools]
           depends:
              - examples::commonAPI::tsd-myservice-app-root
              - examples::commonAPI::tsd-myservice-app-client
              - examples::commonAPI::tsd-myservice-app-stub

      buildTools: [myservice-api, myservice-root, myservice-client, myservice-stub]
      buildVars: [LIBDIR]
      buildScript: |
         # Set the correct path for the configuration file and libraries for CommonAPI
         export COMMONAPI_CONFIG="$1/tsd.myservice.app/ini/commonapi.ini"
         export LD_LIBRARY_PATH="${BOB_DEP_PATHS[examples::commonAPI::tsd-myservice-api-dev]}/usr/${LIBDIR}"
         # Run the root application, the one in charge of communicating with the CommonAPI runtime and Commgr
         tsd.myservice.app.root &
         ROOT_PID=$!
         # Now run the stub first
         tsd.myservice.app.stub &
         SERVICE_PID=$!
         # And then the client application
         tsd.myservice.app.client
         # Wait for the stub to finish
         wait ${SERVICE_PID}
         # Now kill the root appliciation
         kill -SIGTERM ${ROOT_PID}
         wait $! 2>/dev/null

   root:
      depends:
         - system::tsd-common-daemon-dev
         - communication::tsd-communication-dev

      buildScript: |
         buildenvBuildAll -DFEATURE_TSD_MYSERVICE_APP_PART=ROOT

      packageScript: buildenvPackageTarget
      provideTools:
         myservice-root:
            path: "usr/bin"
      provideDeps: ['*-dev']

   client:
      buildScript: |
         buildenvBuildAll -DFEATURE_TSD_MYSERVICE_APP_PART=CLIENT

      packageScript: buildenvPackageTarget
      provideTools:
         myservice-client:
            path: "usr/bin"
      provideDeps: ['*-dev']

   stub:
      buildScript: |
         buildenvBuildAll -DFEATURE_TSD_MYSERVICE_APP_PART=STUB

      packageScript: buildenvPackageTarget
      provideTools:
         myservice-stub:
            path: "usr/bin"
      provideDeps: ['*-dev']
