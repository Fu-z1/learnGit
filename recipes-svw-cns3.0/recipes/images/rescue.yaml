inherit: [rootfs, packing-module]

environment:
  CONFIG_TARGET: "rescue"

depends:
  - name: toolchain::aarch64-linux-gnu
    use: [tools, environment]
    forward: true

  - libs::ext-zlib-target
  - system::ext-busybox
  - system::ext-e2fsprogs-rescue
  - system::bsp::ext-linux-modules
  - system::ext-mtd-utils
  - system::tsd-config-buildcfg
  - system::tsd-config-target
  - libs::ext-readline-target
  - system::ext-util-linux-target
  - system::ext-parted-target

buildVarsWeak: [TFTP]
buildTools: [mkimage]
buildScript: |
  declare -A tocopy
  for key in ${!BOB_DEP_PATHS[@]}; do
     tocopy[$key]=${BOB_DEP_PATHS[$key]}
  done
  unset tocopy[system::tsd-config-buildcfg]
  unset tocopy[rescue]

  rm -rf tmp symbols flash
  mkdir -p tmp symbols flash

  # copy rootfs from SDK
  copyFromFile ${BOB_DEP_PATHS["system::tsd-config-buildcfg"]}/rootfs.txt tmp

  # copy/overwrite target specific files
  for dep in ${tocopy[@]} ; do
     rsync -a ${dep}/ tmp/
  done

  pushd tmp
  find lib/modules/*/kernel/ -type f \
     -not -name "usb-storage.ko" \
     -not -name "ehci-platform.ko" \
     -not -name "ehci-hcd.ko" \
     -not -name "asix.ko" \
     -not -name "usbnet.ko" \
     -not -name "mii.ko" \
     -not -name "usbcore.ko" \
     -not -name "usb-common.ko" \
     -not -name "usb-storage.ko" \
     -not -name "lockd.ko" \
     -not -name "grace.ko" \
     -not -name "sunrpc.ko" \
     -not -name "sd_mod.ko" \
     -not -name "*nfs*" \
     -not -name "loop.ko" \
     -not -name "ravb.ko" \
     -not -name "mdio-bitbang.ko" \
     -not -name "ipv6.ko" \
     -not -name "unix.ko" \
     -not -name "extcon-core.ko" \
     -not -name "phy-rcar-gen3-usb2.ko" \
     -not -name "rpc_hyperflash.ko" \
     -exec rm -rf {} +
  popd

  move_symbols tmp symbols

  # find missing dependencies
  checkSharedLibraries tmp

  fakeroot bash <<- EOF
  # inherit shell settings and traps
  $(set +o)
  $(trap -p)

  # add default directories and special files
  pushd tmp
  mkdir -p boot
  mkdir -p dev/pts
  mkdir -p etc/init.d
  mkdir -p home/user
  mkdir -p initrd
  mkdir -p lib
  mkdir -p mnt/nfs
  mkdir -p opt/bin
  mkdir -p proc
  mkdir -p root
  mkdir -p sys
  mkdir -p tmp
  mkdir -p usr/lib
  mkdir -p var/log
  mkdir -p var/lib/nfs
  mknod dev/console c 5 1
  popd

  # add users
  echo "root:gdOF8VqEfQxto:0:0:root:/root:/bin/sh" >  tmp/etc/passwd
  echo "ftp::1:1:FTP User:/:/bin/sh"               >> tmp/etc/passwd
  echo "root:x:0:root"                             >  tmp/etc/group
  echo "ftp:x:1:root"                              >> tmp/etc/group
  echo -n "PATH=/bin:/sbin:/usr/bin:/usr/sbin:"    >  tmp/etc/profile
  echo "/usr/local/bin:/opt/bin"                   >> tmp/etc/profile
  chmod 644 tmp/etc/passwd
  chmod 644 tmp/etc/group

  # create ramdisk
  rm -rf flash/rescue.cpio
  pushd tmp
  find . | cpio -H newc -o | gzip -9 -n > ../rescue.cpio
  mkimage -A arm64 -T ramdisk -C gzip -d ../rescue.cpio ../flash/rescue.cpio
  popd

  if [ x"$TFTP" = "xtrue" ] ; then
     cp -f flash/rescue.cpio /tftp
  fi

  # clean up
  rm -rf tmp symbols rescue.cpio
  EOF

packageScript: |
  rm -rf *
  cp -a $1/flash .
